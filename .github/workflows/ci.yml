# This is the name of the workflow, which will be displayed in the "Actions" tab of your GitHub repository.
name: Angular CI

# This section defines when the workflow should be triggered.
on:
  # Run on pushes to the 'main' branch.
  push:
    branches: ["main"]
  # Run on any pull request that targets the 'main' branch.
  pull_request:
    branches: ["main"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # We'll define a single job called "build-and-test".
  build-and-test:
    # The type of virtual machine to run the job on. "ubuntu-latest" is a good, standard choice.
    runs-on: ubuntu-latest

    # A job is a sequence of steps.
    steps:
      # Step 1: Check out your repository code so the workflow can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the correct version of Node.js.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Use a version that matches your development environment

      # Step 3: Install dependencies. "npm ci" is faster and more reliable for CI than "npm install".
      - name: Install dependencies
        run: npm ci

      # Step 4: Run the unit tests using the script we defined in package.json.
      - name: Run unit tests
        run: npm run test:ci

      # Step 5: Build the application for production. This creates the release artifact.
      - name: Build application
        run: npm run build # This typically runs `ng build --configuration production`

      # Step 7: Install Playwright browsers and dependencies for E2E tests.
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # Step 8: Run E2E tests.
      - name: Run E2E tests
        run: npm run e2e

      # Step 9: Upload the build artifact to be used by the deploy job.
      - name: Upload production build artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages # This name is expected by the deploy-pages action
          path: dist/product-app/browser/ # The path to the built Angular app

  # This job handles the deployment to GitHub Pages.
  deploy:
    # This job will only run after 'build-and-test' has succeeded.
    needs: build-and-test
    # This job will only run on pushes to the 'main' branch, not on pull requests.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # Grant permissions for the workflow to deploy to GitHub Pages.
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
